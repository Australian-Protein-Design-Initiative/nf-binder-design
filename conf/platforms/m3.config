params {
    models_basepath = '/scratch2/kl63/apdi/nf-binder-design/models'
    container_basepath = '/scratch2/kl63/apdi/nf-binder-design/containers'

    slurm_account = 'kl63'
    //slurm_account = 'df22'
}

def random_choice(choices) {
    return choices[new Random().nextInt(choices.size())]
}

executor {
    $slurm {
      queueSize = 900
      pollInterval = '30 sec'
      queueStatInterval = '10m'
    }
}

process {
    executor = 'slurm'
    stageInMode = 'symlink'
    errorStrategy = 'retry'
    maxRetries = 1
    cache = 'lenient'
    
    withName: GET_CONTIGS {
        container = params.containers.get_contigs
        executor = 'local'
    }

    withName: RENUMBER_RESIDUES {
        container = params.containers.renumber_residues
        executor = 'local'
    }

    withName: COMBINE_SCORES {
        container = params.containers.combine_scores
        executor = 'local'
    }

    withName: RFDIFFUSION {
        //clusterOptions = "--account ${params.slurm_account} --gres=gpu:1 --partition=m3h --qos=m3h"
        clusterOptions = "--account ${params.slurm_account} --gres=gpu:1 --partition=bdi --qos=bdiq"
        time = 2.hours

        container = params.containers.rfdiffusion
        accelerator = 1

        memory = '64g'
        cpus = 16
    }
    
    withName: RFDIFFUSION_PARTIAL {
        container = params.containers.rfdiffusion

        // clusterOptions = "--account ${params.slurm_account} --gres=gpu:1 --partition=m3h --qos=m3h"
        clusterOptions = "--account ${params.slurm_account} --gres=gpu:1 --partition=bdi --qos=bdiq"
        time = 30.minutes

        accelerator = 1
        memory = '64g'
        cpus = 16
    }

    withName: SILENT_FROM_PDBS {
        container = params.containers.silenttools
    }
    
    withName: DL_BINDER_DESIGN_PROTEINMPNN {
        container = params.containers.dl_binder_design_proteinmpnn

        // CPU only
        // clusterOptions = "--account df22 --partition=genomics --qos=genomics"
        clusterOptions = "--account df22 --partition=comp --qos=shortq"
        time = 30.minutes

        memory = '4g'
        cpus = 1
    }
    
    withName: AF2_INITIAL_GUESS {
        container = params.containers.af2_initial_guess
        accelerator = 1

        // H100-80G
        clusterOptions = "--account ${params.slurm_account} --gres=gpu:1 --partition=m3h --qos=m3h"
        // A100 (40G?)
        //clusterOptions = "--account ${params.slurm_account} --gres=gpu:1 --partition=bdi --qos=bdiq"

        time = 2.hours

        memory = '64g'
        cpus = 16
    }
}

// Apptainer specific settings
apptainer {
    enabled = true
    autoMounts = true
    // --nv to enable NVIDIA GPU support
    runOptions = "--nv -B /scratch2 -B /fs04 -B ${params.models_basepath}/af2_initial_guess/model_weights:/app/dl_binder_design/af2_initial_guess/model_weights -B ${params.models_basepath}:/models"
}
